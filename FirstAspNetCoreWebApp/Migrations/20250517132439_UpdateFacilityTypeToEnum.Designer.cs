// <auto-generated />
using System;
using FirstAspNetCoreWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstAspNetCoreWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250517132439_UpdateFacilityTypeToEnum")]
    partial class UpdateFacilityTypeToEnum
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Admin", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("AdminLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            AdminLevel = 1,
                            LastActionTime = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Permissions = "All"
                        });
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.AdminAction", b =>
                {
                    b.Property<int>("ActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionID"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionType")
                        .HasColumnType("int");

                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("AffectedEntityID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionID");

                    b.HasIndex("AdminID");

                    b.ToTable("AdminActions");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Amenity", b =>
                {
                    b.Property<int>("AmenityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmenityID"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AmenityID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            AmenityID = 1,
                            Category = "General",
                            Description = "Free WiFi",
                            Name = "WiFi"
                        },
                        new
                        {
                            AmenityID = 2,
                            Category = "Hotel",
                            Description = "Outdoor swimming pool",
                            Name = "Swimming Pool"
                        },
                        new
                        {
                            AmenityID = 3,
                            Category = "General",
                            Description = "Free parking on premises",
                            Name = "Parking"
                        },
                        new
                        {
                            AmenityID = 4,
                            Category = "Dining",
                            Description = "On-site restaurant",
                            Name = "Restaurant"
                        },
                        new
                        {
                            AmenityID = 5,
                            Category = "Dining",
                            Description = "On-site bar",
                            Name = "Bar"
                        });
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("SpecialRequests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Facility", b =>
                {
                    b.Property<int>("FacilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("FacilityID");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.FacilityAmenity", b =>
                {
                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<int>("AmenityID")
                        .HasColumnType("int");

                    b.HasKey("FacilityID", "AmenityID");

                    b.HasIndex("AmenityID");

                    b.ToTable("FacilityAmenities");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMainImage")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ImageID");

                    b.HasIndex("FacilityID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("LocationID");

                    b.HasIndex("FacilityID")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.RegularUser", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecentSearches")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewCount")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("RegularUsers");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportID"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportedByUserID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolutionNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResolvedByAdminID")
                        .HasColumnType("int");

                    b.Property<int>("ReviewID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ReportID");

                    b.HasIndex("ReportedByUserID");

                    b.HasIndex("ResolvedByAdminID");

                    b.HasIndex("ReviewID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("FacilityID")
                        .HasColumnType("int");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("FacilityID");

                    b.HasIndex("UserID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.SearchLog", b =>
                {
                    b.Property<int>("SearchLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SearchLogID"));

                    b.Property<string>("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResultCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SearchDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchQuery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SearchLogID");

                    b.HasIndex("UserID");

                    b.ToTable("SearchLogs");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "admin@travelreview.com",
                            FailedLoginAttempts = 0,
                            FirstName = "Admin",
                            IsActive = true,
                            LastName = "User",
                            Password = "AdminPassword123!",
                            RegistrationDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserType = 2
                        });
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.VerifiedUser", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("FacilityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("FacilityID")
                        .IsUnique()
                        .HasFilter("[FacilityID] IS NOT NULL");

                    b.ToTable("VerifiedUsers");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Admin", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("FirstAspNetCoreWebApp.Models.Admin", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.AdminAction", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Admin", "Admin")
                        .WithMany("AdminActions")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Booking", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithMany("Bookings")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.FacilityAmenity", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Amenity", "Amenity")
                        .WithMany("FacilityAmenities")
                        .HasForeignKey("AmenityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithMany("FacilityAmenities")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenity");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Image", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithMany("Images")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Location", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithOne("Location")
                        .HasForeignKey("FirstAspNetCoreWebApp.Models.Location", "FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.RegularUser", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithOne("RegularUser")
                        .HasForeignKey("FirstAspNetCoreWebApp.Models.RegularUser", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Report", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "ReportedByUser")
                        .WithMany("Reports")
                        .HasForeignKey("ReportedByUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FirstAspNetCoreWebApp.Models.Admin", "ResolvedByAdmin")
                        .WithMany("ResolvedReports")
                        .HasForeignKey("ResolvedByAdminID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FirstAspNetCoreWebApp.Models.Review", "Review")
                        .WithMany("Reports")
                        .HasForeignKey("ReviewID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportedByUser");

                    b.Navigation("ResolvedByAdmin");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Review", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithMany("Reviews")
                        .HasForeignKey("FacilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.SearchLog", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.VerifiedUser", b =>
                {
                    b.HasOne("FirstAspNetCoreWebApp.Models.Facility", "Facility")
                        .WithOne("Manager")
                        .HasForeignKey("FirstAspNetCoreWebApp.Models.VerifiedUser", "FacilityID");

                    b.HasOne("FirstAspNetCoreWebApp.Models.User", "User")
                        .WithOne("VerifiedUser")
                        .HasForeignKey("FirstAspNetCoreWebApp.Models.VerifiedUser", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Admin", b =>
                {
                    b.Navigation("AdminActions");

                    b.Navigation("ResolvedReports");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Amenity", b =>
                {
                    b.Navigation("FacilityAmenities");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Facility", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("FacilityAmenities");

                    b.Navigation("Images");

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.Review", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("FirstAspNetCoreWebApp.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Bookings");

                    b.Navigation("RegularUser");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("VerifiedUser");
                });
#pragma warning restore 612, 618
        }
    }
}
